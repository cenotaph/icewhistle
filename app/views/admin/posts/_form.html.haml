= nested_form_for [:admin, @post], :html => {:multipart => true} do |f|
  .field
    %label.label Title
    .control= f.text_field :title, class: :input
  .field
    %label.label Body
    .control= f.text_area :body, :class => :ckeditor
  - unless @post.extended.blank?
    .field
      %label.label extended:
      .control= f.text_area :extended, :class => :ckeditor 
  .field
    %label.label Tags
    .control= f.text_field :tag_list, value: f.object.tag_list.blank? ? '' : f.object.tags.join(','), class: :input
  
  .field
    .control
      - unless f.object.image.blank?
        %figure.image= image_tag f.object.image.url(:wide)
      = f.file_field :image
  .field
    = f.fields_for :photos do |ff|
      - unless ff.object.filename.blank?
        %figure.image= image_tag ff.object.filename.url(:midsize)
      = ff.file_field :filename
      = ff.link_to_remove 'Remove this'
  
    = f.link_to_add 'add one or more images', :photos, class: [:button, :small]
  .field
    = f.fields_for :videos do |ff|
      - unless ff.object.blank?
        = image_tag ff.object.url rescue ''
        = ff.text_field :url, class: :input, label: 'URL to video'
        = ff.text_field :bytes, class: :input, label: 'SIZE of video in bytes'
        = ff.text_field :content_type, class: :input, label: 'Video MIME type'
  
    = f.link_to_add 'add one or more videos', :videos, class: [:button, :small]

  .field
    = f.fields_for :audiopodcasts do |ff|
      - unless ff.object.blank?
        = image_tag ff.object.url rescue ''
        = ff.text_field :url, class: :input
        = ff.text_field :bytes, class: :input
        = ff.text_field :content_type, class: :input
  
    = f.link_to_add 'add one or more audio attachments', :audiopodcasts, class: [:button, :small]
          
  .field
    .small-6.control= f.check_box :published
      
  .field
    .small-6.control= f.submit 'Save', class: [:small, :round, :button] 