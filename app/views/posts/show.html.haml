- if @post.image?
  - if @post.image_width.to_i > 1200
    %figure.image= image_tag @post.image.url.gsub(/development/, 'production')
  - else 
    .small_image
      %figure.image.smaller{style: "width: #{@post.image_width}px"}= image_tag @post.image.url
.post.container

  %h1.post_title= raw @post.title
  .date
    %em= "posted: " + l(@post.created_at.to_date, :format => :long   )

  - if @post.photos.empty?
    .columns
      .column.is-three-fifths
        - unless @post.audiopodcasts.empty?
          - @post.audiopodcasts.each do |podcast|
            .audiocontent.content
              %audio{src: podcast.url, style: "width: 100%; height: 100%", width: "100%", height: "100%"}
        .content.post_body

          = raw @post.body
          - if @post.extended?
            %br/
            = raw @post.extended
          - unless @post.videos.empty?
            - @post.videos.each do |video|              
              - if video.progressive_video
                .videocontent
                  %video{:controls => "", :poster => "#{video.url}/poster.jpg", :preload => "none"}
                    %source{:src => "#{video.url}/index.m3u8", :type => "application/vnd.apple.mpegurl"}
                    %source{:src => "#{video.url}/progressive.mp4", :type => "video/mp4; codecs=\"avc1.4d401f, mp4a.40.2\""}
              - else
                .videocontent.column
                  %video{src: video.url, style: "width: 100%; height: 100%", width: "100%", height: "100%"}

          - unless @post.videos.empty? && @post.audiopodcasts.empty?
            = content_for :jquery do
              :plain

                $('video,audio').mediaelementplayer({
                  videoWidth: '100%',
                  videoHeight: '100%',  
                  enableAutosize: true,
                  renderers: ['native_hls'], 
                  defaultVideoWidth: "100%", alwaysShowHours: true,
                  hls: {
                    debug: true
                  },
                  success: function(media, node, instance) {
                    // Use the conditional to detect if you are using `native_hls` renderer for that given media;
                    // otherwise, you don't need it
                    if (Hls !== undefined) {
                      media.addEventListener(Hls.Events.MEDIA_ATTACHED, function () {
                        // All the code when this event is reached...
                        console.log('Media attached!');
                      });

                      // Manifest file was parsed, invoke loading method
                      media.addEventListener(Hls.Events.MANIFEST_PARSED, function () {
                        // All the code when this event is reached...
                        console.log('Manifest parsed!');

                      });

                      media.addEventListener(Hls.Events.FRAG_PARSING_METADATA, function (event, data) {
                        // All the code when this event is reached...
                        console.log(data);
                      });
                    }
                  }});   
          
      .column.post_sidebar= render :partial => 'post_sidebar'
        



  - else
  
    - if @post.photos.size == 1
      .hero
        - if @post.photos.first.filename_width < 1200
          %figure.image= image_tag @post.photos.first.filename.url
        - else
          %figure.image= image_tag @post.photos.first.filename.url(:main)
    - elsif @post.photos.size > 1
      .carousel
        - @post.photos.each do |p|
          - if p.filename_width < 1200
            %figure.image= image_tag p.filename.url
          - else
            %figure.image= image_tag p.filename.url(:main)  
    .columns
      .column.is-two-thirds
        - unless @post.audiopodcasts.empty?
          - @post.audiopodcasts.each do |podcast|
            .audiocontent
              %audio{src: podcast.url, style: "width: 100%; height: 100%", width: "100%", height: "100%"}
        .content.post_body
          = raw @post.body
          - unless @post.extended.blank?
            %br/
            = raw @post.extended
          - unless @post.videos.empty?
            - @post.videos.each do |video|

              - if video.progressive_video == true
                %video{:controls => "", :poster => "#{video.url}/poster.jpg", :preload => "none"}
                  %source{:src => "#{video.url}/index.m3u8", :type => "application/vnd.apple.mpegurl"}
                  %source{:src => "#{video.url}/progressive.mp4", :type => "video/mp4; codecs=\"avc1.4d401f, mp4a.40.2\""}
              - else
                .videocontent
                  %video{src: video.url, style: "width: 100%; height: 100%", width: "100%", height: "100%"}

            = content_for :jquery do
              :plain
                $('video,audio').mediaelementplayer({
                  renderers: ['native_hls'], 
                  defaultVideoWidth: "100%", alwaysShowHours: true,
                  hls: {
                    debug: true
                  },
                  success: function(media, node, instance) {
                    // Use the conditional to detect if you are using `native_hls` renderer for that given media;
                    // otherwise, you don't need it
                    if (Hls !== undefined) {
                      media.addEventListener(Hls.Events.MEDIA_ATTACHED, function () {
                        // All the code when this event is reached...
                        console.log('Media attached!');
                      });

                      // Manifest file was parsed, invoke loading method
                      media.addEventListener(Hls.Events.MANIFEST_PARSED, function () {
                        // All the code when this event is reached...
                        console.log('Manifest parsed!');

                      });

                      media.addEventListener(Hls.Events.FRAG_PARSING_METADATA, function (event, data) {
                        // All the code when this event is reached...
                        console.log(data);
                      });
                    }
                  }});   
                
      .column.post_sidebar= render :partial => 'post_sidebar'

  .prev_next.columns
    .column.has-text-left
      - unless @post.previous_post.nil?
        %h6 Previous post:
        .link
          = link_to @post.previous_post.title.html_safe, @post.previous_post
          .date= @post.previous_post.created_at.strftime('%d %B %Y')
        
    .column.has-text-right
      - unless @post.next_post.nil?
        %h6 Next post:
        .link
          = link_to @post.next_post.title.html_safe, @post.next_post
          .date= @post.next_post.created_at.strftime('%d %B %Y')
  %br{:clear => 'all'}
  
